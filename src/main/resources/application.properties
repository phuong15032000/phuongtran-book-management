spring.datasource.url= jdbc:postgresql://localhost:5432/book
spring.datasource.username= postgres
spring.datasource.password= admin

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
jwt-key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJCb29rIn0.BeNIpDO5F2dJYsk2_T2mh-ZD4PWQ18fq5_UjISIv3qc

#security.oauth2.client.clientId = 381932037028-4pi3r4807jg9a06d424324ppl4dcuf12.apps.googleusercontent.com
#security.oauth2.client.clientSecret = KCQl96CF9ZNyW6uirtcU-7q8
#security.oauth2.client.accessTokenUri  =  https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.tokenName = oauth_token
#security.oauth2.client.authenticationScheme = query
#security.oauth2.client.clientAuthenticationScheme = form
#security.oauth2.client.scope = profile email
#
#security.oauth2.resource.userInfoUri  =  https://www.googleapis.com/userinfo/v2/me
#security.oauth2.resource.preferTokenInfo = false
spring.security.oauth2.client.registration.google.client-id=960487106143-h5vcsleuug8hh8t9ktlliogqrj0gaa6e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=YU50P_m7077-ttmxlTbH6NuB


